@font-face {
  font-family: "PhosphateSolid";
  src: url("../PhosphateSolid.ttf");
}

@keyframes shake {
  0% {
    transform: translate(1px, 1px) rotate(0deg);
  }
  10% {
    transform: translate(-1px, -2px) rotate(-1deg);
  }
  20% {
    transform: translate(-3px, 0px) rotate(1deg);
  }
  30% {
    transform: translate(3px, 2px) rotate(0deg);
  }
  40% {
    transform: translate(1px, -1px) rotate(1deg);
  }
  50% {
    transform: translate(-1px, 2px) rotate(-1deg);
  }
  60% {
    transform: translate(-3px, 1px) rotate(0deg);
  }
  70% {
    transform: translate(3px, 1px) rotate(-1deg);
  }
  80% {
    transform: translate(-1px, -1px) rotate(1deg);
  }
  90% {
    transform: translate(1px, 2px) rotate(0deg);
  }
  100% {
    transform: translate(1px, -2px) rotate(-1deg);
  }
}

.funLetters {
  display: inline-block;
  font-family: PhosphateSolid;
  font-size: 2.3em;
  /* space between letters */
  letter-spacing: -0.05em;
  font-weight: normal;
  text-transform: uppercase;
  -webkit-text-stroke-width: 1.5px;
  -webkit-text-stroke-color: black;
  /* text-shadow: 3px 3px 0 #000; */
  /* text-shadow: 2px 2px 0 #f00, -2px -2px 0 #0f0, 2px -2px 0 #00f; the effect when hovering over "art" */
  text-shadow: -1px -1px 1px #f00, 1px 1px 1px #00f;
}

.funLetters span {
  display: inline-block;
  transform-origin: center; /* Rotate around the center of each letter */
}

.funLetters:hover {
  animation: shake 0.8s; /* Apply shake animation on hover */
  animation-iteration-count: infinite; /* Make the shake effect repeat */
}

.funLetters:hover:after {
  content: "";
  position: absolute;
  top: 50%;
  right: 110%;
  width: 70px;
  height: 70px;
  background-image: url("../public/hand.png"); /* Replace with your image path */
  background-size: contain;
  background-repeat: no-repeat;
  transform: translateY(-50%);
  /* transform: translateX(-50%); */
}

/* Example styles for pseudo-elements */
.rgbTextShift::before {
  content: attr(data-char); /* Use attr(data-char) to dynamically insert text */
  color: #f00; /* Example color for ::before */
  position: absolute;
  top: 0;
  left: -0.075rem;
}

.after {
  content: attr(data-char); /* Use attr(data-char) to dynamically insert text */
  color: #00f; /* Example color for ::after */
  position: absolute;
  top: 0;
  left: 0.075rem;
  animation-delay: -0.33s;
}

.rgb-text-shift {
  position: relative;
  color: white;

  /* If browser supports mix-blend-mode: screen, change color to #0f0 */
  @supports (mix-blend-mode: screen) {
    color: #0f0;
  }

  /* If browser supports mix-blend-mode: screen, apply styles to self and pseudo-elements */
  @supports (mix-blend-mode: screen) {
    &, &:before, &:after {
      content: attr(data-text); /* Use attr(data-text) instead of attr(text) */
      mix-blend-mode: screen;
    }
  }

  /* Styles for ::before pseudo-element */
  &:before {
    color: #f00;
    position: absolute;
    top: 0;
    left: -0.075rem;
  }

  /* Styles for ::after pseudo-element */
  &:after {
    color: #00f;
    animation-delay: -0.33s;
    position: absolute;
    top: 0;
    z-index: 2;
    left: 0.075rem;
  }

}

